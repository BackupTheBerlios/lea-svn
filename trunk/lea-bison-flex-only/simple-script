#!/bin/lea
/*
 * \file simple-script
 * \brief Simple sample script
 *
 * \author Eduardo Robles Elvira <edulix@iespana.es>
 *
 * This is part of Lea. Lea is free software; 
 * you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 * 
 * Lea is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with lea; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 * 
 * See COPYING for details.
 */

prog antispam
	cons
		MAX_ARRAY : 200
		MAX       : 10
	var
		email     : cadena
		i         : entero
	prin
			escribir	"This program reads an email address (i.e luis. \
						fernando@myserver.com.es) and shows then the HTML code to \
						create a link to it and also it as a text so that spammers \
						will not use that email address to their business\n \
						Whenever you want to stop the program, press <Ctrl>-<C>"
		
		i:=1
		
		mientras i < 10
			escribir	"Email: "
			leer email
			showEmail(email, cierto)
			showEmail(email, falso)
		fm
	fin
	
	proc showEmail(ent email:cadena, antispam:logico)
		var
			t1,t2      : tabla[MAX_ARRAY] de cadena
			i, j, k, l : entero
		prin
			si (antispam = falso) :
				escribir "<a href=\"", email, "\">", email, "</a>\n"
			| otras:
				explode(".", email, t1)
				k := count(t1)
				
				desde (i:=1) hasta (k-1)
					explode("@", t1[i], t2)
					l := count(t2)
					desde (j := 1) hasta l - 1
						escribir t2[j], " at "
					fd
					escribir t2[l], " dot "
				fd
			fsi
		fin
	
	proc explode(ent sep:caracter, cad: cadena; entsal t:tabla[MAX_ARRAY] de cadena)
		var
			i,j : entero
		prin
			i, j := 1, 1
			
			mientras i<=long(t)
				si t[i]=sep y i>1:
					j := j + 1
				|otras:
					nula
				fsi
				t[j] := cad[i]
				i := i + 1
			fm
		fin
	
	func count(t:tabla[MAX_ARRAY] de cadena) dev (l: entero)
	var
		f : logico
	prin
		si (long(l[1]) <> 0):
			f := falso
			l := 1
			
			mientras l <= MAX_ARRAY y no f
				si long(t[l]) = 0:
					enc:=cierto
				| otras:
					l := l + 1
				fsi
			fm
		|otras:
			l:=0
		fsi
		
	fin